import React, { useState, useEffect, useRef } from 'react';
import { motion } from 'motion/react';
import { ArrowLeft, MapPin, Settings, UserPlus, Share, Bell, ChevronDown, ChevronUp, Globe, Search, Menu, Building2, Users, TrendingUp, Calendar, Verified, Zap, FileText, CalendarDays } from 'lucide-react';
import { StatusBar } from './StatusBar';
import { ProfileAvatar } from './ProfileAvatar';
import { CompactMetricCard } from './CompactMetricCard';
import { CompactSuperpowerCard } from './CompactSuperpowerCard';
import { BlikCard, BlikData } from './BlikCard';
import { BusinessSuperpowerCard } from './BusinessSuperpowerCard';
import { ValueMapPreviewCard } from './ValueMapPreviewCard';


interface User {
  name: string;
  status: string;
  location: string;
  backgroundImage: string;
  avatarImage: string;
  isOnline: boolean;
  profileType?: 'personal' | 'business';
  businessInfo?: {
    companyName: string;
    industry: string;
    founded: string;
    employees: string;
    revenue: string;
    description: string;
    website?: string;
    phone?: string;
    email?: string;
    verified: boolean;
    verificationDate?: string;
    verificationDocuments?: any[];
    brandHeader?: string; // –ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª–µ–π
  };
  metrics: {
    bliks: number;
    friends: number;
    superpowers: number;
  };
  topSuperpowers: Array<{
    name: string;
    emoji: string;
    value: number;
    energy: number;
  }>;
}

interface ProfileScreenProps {
  user: User;
  receivedBliks?: BlikData[];
  sentBliks?: BlikData[];
  onSettings: () => void;
  onViewMap: () => void;
  onViewPersonalSite?: () => void;
  onViewBlog?: () => void; // –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–≥–∞
  onViewBliks: () => void;
  onViewFriends?: () => void;
  onChat: () => void;
  onBack: () => void;
  onAddFriend?: () => void;
  onSubscribe?: () => void;
  onShare: () => void;
  onSuperpowerClick?: (superpowerName: string) => void;
  onUserProfile?: (userId: string) => void;
  onLike?: (blikId: string) => void;
  onComment?: (blikId: string) => void;
  onShareBlik?: (blikId: string) => void;
  onBlikDetail?: (blikId: string) => void;
  onSidebar?: () => void;
  onSearch?: () => void;
  onNotifications?: () => void;
}

interface CircularActionButtonProps {
  icon: React.ReactNode;
  label: string;
  onClick: () => void;
  variant?: 'primary' | 'secondary';
  size?: 'sm' | 'md' | 'lg';
}

const CircularActionButton: React.FC<CircularActionButtonProps> = ({
  icon,
  label,
  onClick,
  variant = 'secondary',
  size = 'md'
}) => {
  const sizeClasses = {
    sm: 'w-12 h-12',
    md: 'w-14 h-14',
    lg: 'w-16 h-16'
  };

  const variantClasses = {
    primary: 'bg-primary text-primary-foreground hover:bg-primary/90',
    secondary: 'glass-card hover:energy-glow'
  };

  return (
    <motion.div
      whileHover={{ scale: 1.05, y: -2 }}
      whileTap={{ scale: 0.95 }}
      className="flex flex-col items-center gap-2"
    >
      <button
        onClick={onClick}
        className={`
          ${sizeClasses[size]}
          ${variantClasses[variant]}
          rounded-full flex items-center justify-center
          transition-all duration-300
          border border-border/50
          shadow-lg
        `}
      >
        {icon}
      </button>
      <span className="text-xs text-muted-foreground text-center leading-tight max-w-[80px]">
        {label}
      </span>
    </motion.div>
  );
};

export function ProfileScreen({
  user,
  receivedBliks = [],
  sentBliks = [],
  onSettings,
  onViewMap,
  onViewPersonalSite,
  onViewBliks,
  onViewFriends,
  onChat,
  onBack,
  onAddFriend,
  onSubscribe,
  onShare,
  onSuperpowerClick,
  onUserProfile,
  onLike,
  onComment,
  onShareBlik,
  onBlikDetail,
  onSidebar,
  onSearch,
  onNotifications,
  onViewBlog
}: ProfileScreenProps) {
  const [isTopSuperpowersExpanded, setIsTopSuperpowersExpanded] = useState(false);
  const [showAllBliks, setShowAllBliks] = useState(false);
  const [bliksTab, setBliksTab] = useState<'my' | 'friends'>('my');
  const [businessTab, setBusinessTab] = useState<'bliks' | 'blog' | 'events'>('bliks');
  const bliksRef = useRef<HTMLDivElement>(null);

  // üéØ –ê–î–ê–ü–¢–ò–í–ù–û–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –°–£–ü–ï–†–°–ò–õ: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  const [initialCount, setInitialCount] = useState(3); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 3 –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  
  useEffect(() => {
    const updateInitialCount = () => {
      const width = window.innerWidth;
      
      if (width < 768) {
        // –ú–æ–±–∏–ª—å–Ω—ã–µ: 3 —Å—É–ø–µ—Ä—Å–∏–ª—ã (1 —Ä—è–¥ –ø–æ 3)
        setInitialCount(3);
      } else if (width >= 768 && width < 1024) {
        // –ü–ª–∞–Ω—à–µ—Ç—ã (md): 6 —Å—É–ø–µ—Ä—Å–∏–ª (2 —Ä—è–¥–∞ –ø–æ 3)
        setInitialCount(6);
      } else if (width >= 1024 && width < 1280) {
        // –î–µ—Å–∫—Ç–æ–ø (lg): 8 —Å—É–ø–µ—Ä—Å–∏–ª (2 —Ä—è–¥–∞ –ø–æ 4)
        setInitialCount(8);
      } else if (width >= 1280) {
        // –ë–æ–ª—å—à–∏–µ —ç–∫—Ä–∞–Ω—ã (xl+): 10 —Å—É–ø–µ—Ä—Å–∏–ª (2 —Ä—è–¥–∞ –ø–æ 5)
        setInitialCount(10);
      }
    };
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    updateInitialCount();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', updateInitialCount);
    return () => window.removeEventListener('resize', updateInitialCount);
  }, []);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–ø–µ—Ä—Å–∏–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const displayedSuperpowers = isTopSuperpowersExpanded 
    ? user.topSuperpowers 
    : user.topSuperpowers.slice(0, initialCount);

  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–∏–∫–æ–≤ –¥–ª—è –ø—Ä–µ–≤—å—é (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º 3-4 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±–ª–∏–∫–∞)
  const previewBliksCount = 4;

  // –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –±–ª–∏–∫–∏
  const recentReceivedBliks = receivedBliks.sort((a, b) => {
    const timeA = a.timestamp.includes('—á–∞—Å') ? 1 : a.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
    const timeB = b.timestamp.includes('—á–∞—Å') ? 1 : b.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
    return timeA - timeB;
  });

  // –í—Å–µ –±–ª–∏–∫–∏ –¥–ª—è –ø—Ä–µ–≤—å—é (–≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ)
  const allBliks = [...receivedBliks, ...sentBliks].sort((a, b) => {
    const timeA = a.timestamp.includes('—á–∞—Å') ? 1 : a.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
    const timeB = b.timestamp.includes('—á–∞—Å') ? 1 : b.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
    return timeA - timeB;
  });

  // –ë–ª–∏–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const displayedBliks = user.profileType === 'business'
    ? receivedBliks.sort((a, b) => { // –î–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –±–ª–∏–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ (–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ)
        const timeA = a.timestamp.includes('—á–∞—Å') ? 1 : a.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        const timeB = b.timestamp.includes('—á–∞—Å') ? 1 : b.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        return timeA - timeB;
      })
    : bliksTab === 'my' 
    ? sentBliks.sort((a, b) => {
        const timeA = a.timestamp.includes('—á–∞—Å') ? 1 : a.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        const timeB = b.timestamp.includes('—á–∞—Å') ? 1 : b.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        return timeA - timeB;
      })
    : receivedBliks.sort((a, b) => {
        const timeA = a.timestamp.includes('—á–∞—Å') ? 1 : a.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        const timeB = b.timestamp.includes('—á–∞—Å') ? 1 : b.timestamp.includes('–¥–µ–Ω—å') ? 24 : 1;
        return timeA - timeB;
      });

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ —Å–µ–∫—Ü–∏–∏ –±–ª–∏–∫–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ –º–µ—Ç—Ä–∏–∫–µ)
  const scrollToBliks = () => {
    if (bliksRef.current) {
      bliksRef.current.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      });
    }
  };

  return (
    <div className="min-h-screen relative flex flex-col">
      {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –§–ò–†–ú–ï–ù–ù–´–ô –≠–ù–ï–†–ì–ò–ß–ù–´–ô –§–û–ù */}
      <div 
        className="fixed inset-0 z-0"
        style={{
          backgroundImage: user.profileType === 'business'
            ? `linear-gradient(135deg, rgba(26,27,35,0.30) 0%, rgba(26,27,35,0.15) 30%, rgba(26,27,35,0.10) 60%, rgba(26,27,35,0.40) 100%), url(${user.backgroundImage})`
            : `linear-gradient(135deg, rgba(26,27,35,0.50) 0%, rgba(99,102,241,0.12) 20%, rgba(236,72,153,0.08) 40%, rgba(168,85,247,0.10) 60%, rgba(26,27,35,0.15) 80%, rgba(26,27,35,0.60) 100%), url(${user.backgroundImage})`,
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          backgroundRepeat: 'no-repeat'
        }}
      />

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π */}
      <div className="relative z-10 flex flex-col">
        {/* –°—Ç–∞—Ç—É—Å –±–∞—Ä */}
        <StatusBar />

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ - –¢–ï–ü–ï–†–¨ –°–í–ï–†–•–£ –î–õ–Ø –í–°–ï–• */}
        <div className="flex items-center justify-between px-6 py-2">
          <motion.button
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
            onClick={onBack}
            className="p-2 -ml-2 text-foreground"
          >
            <ArrowLeft size={24} />
          </motion.button>

          <div className="flex items-center gap-2">
            {/* –ü–æ–∏—Å–∫ */}
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              onClick={onSearch}
              className="
                text-white/80 hover:text-white 
                p-2 rounded-xl
                hover:bg-white/10
                backdrop-blur-xl
                transition-all duration-300
              "
            >
              <Search size={20} />
            </motion.button>

            {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              onClick={onNotifications}
              className="
                text-white/80 hover:text-white 
                p-2 rounded-xl
                hover:bg-white/10
                backdrop-blur-xl
                transition-all duration-300
                relative
              "
            >
              <Bell size={20} />
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
              <span className="absolute -top-1 -right-1 w-3 h-3 bg-gradient-to-r from-pink-500 to-orange-400 rounded-full animate-pulse" />
            </motion.button>

            {/* –ú–µ–Ω—é (—Å–∞–π–¥–±–∞—Ä) */}
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              onClick={onSidebar}
              className="
                text-white/80 hover:text-white 
                p-2 rounded-xl
                hover:bg-white/10
                backdrop-blur-xl
                transition-all duration-300
              "
            >
              <Menu size={20} />
            </motion.button>

            {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è */}
            <motion.button
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
              onClick={onSettings}
              className="
                text-white/80 hover:text-white 
                p-2 rounded-xl
                hover:bg-white/10
                backdrop-blur-xl
                transition-all duration-300
              "
            >
              <Settings size={20} />
            </motion.button>
          </div>
        </div>

        {/* üè¢ –£–ü–†–û–©–ï–ù–ù–ê–Ø –ë–†–ï–ù–î–ò–†–û–í–ê–ù–ù–ê–Ø –®–ê–ü–ö–ê (—Ç–æ–ª—å–∫–æ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª–µ–π) */}
        {user.profileType === 'business' && user.businessInfo?.brandHeader && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            className="relative w-full h-48 sm:h-56 md:h-64 overflow-hidden"
          >
            {/* –ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
            <img
              src={user.businessInfo.brandHeader}
              alt={`${user.businessInfo.companyName} header`}
              className="w-full h-full object-cover"
            />
            
            {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */}
            <div className="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-slate-900/80" />
            
            {/* –ü–†–û–°–¢–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ù–ê –®–ê–ü–ö–ï */}
            <div className="absolute bottom-0 left-0 right-0 px-6 pb-4">
              <div className="flex items-center gap-3">
                <ProfileAvatar 
                  image={user.avatarImage} 
                  isOnline={user.isOnline}
                  size="large"
                  isBrandLogo={user.profileType === 'business'}
                />
                <div className="flex-1">
                  <div className="flex items-center gap-2">
                    <h1 className="font-bold text-xl text-white">
                      {user.name}
                    </h1>
                    {user.businessInfo.verified && (
                      <Verified size={18} className="text-emerald-400 fill-current" />
                    )}
                  </div>
                  <p className="text-sm text-white/80 line-clamp-1">{user.businessInfo.description}</p>
                  <div className="flex items-center gap-1 text-xs text-white/70 mt-0.5">
                    <MapPin size={12} className="text-blue-400" />
                    <span>{user.location}</span>
                  </div>
                </div>
              </div>
            </div>
          </motion.div>
        )}

        {/* –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–î –®–ê–ü–ö–û–ô - –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª–µ–π */}
        {user.profileType === 'business' && user.businessInfo && (
          <div className="border-b border-white/10">
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4, delay: 0.1 }}
              className="px-6 py-4"
            >
              <div className="flex items-center justify-center gap-6 max-w-md mx-auto">
                <CompactMetricCard 
                  value={user.metrics.superpowers} 
                  label="–°—É–ø–µ—Ä—Å–∏–ª—ã" 
                  index={0}
                  onClick={onViewMap}
                />
                <CompactMetricCard 
                  value={user.metrics.bliks} 
                  label="–ë–ª–∏–∫–∏" 
                  index={1}
                  onClick={scrollToBliks}
                />
                <CompactMetricCard 
                  value={user.metrics.friends} 
                  label="–ö–ª–∏–µ–Ω—Ç—ã" 
                  index={2}
                  onClick={onViewFriends || (() => {})}
                />
              </div>
            </motion.div>
          </div>
        )}

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
        <div className="px-6 pb-8">
          {/* üè¢ –ë–ò–ó–ù–ï–°-–ü–†–û–§–ò–õ–¨: –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ */}
          {user.profileType === 'business' && user.businessInfo ? (
            <>

              {/* –ö–∞—Ä—Ç–∞ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ - –ø—Ä–µ–≤—å—é —Å –¥–∏–∞–≥—Ä–∞–º–º–æ–π –∏ —Ç–æ–ø-3 —Å—É–ø–µ—Ä—Å–∏–ª–∞–º–∏ */}
              <ValueMapPreviewCard
                topSuperpowers={user.topSuperpowers}
                overallScore={94}
                metrics={user.metrics}
                onClick={onViewMap}
              />
            </>
          ) : (
            // –õ–ò–ß–ù–´–ô –ü–†–û–§–ò–õ–¨: –û–±—ã—á–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—ÉÔøΩÔøΩ–∞
            <>
              {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                className="flex items-start gap-4 mb-6"
              >
                <ProfileAvatar 
                  image={user.avatarImage} 
                  isOnline={user.isOnline}
                  size="large"
                  isBrandLogo={user.profileType === 'business'}
                />
                
                <div className="flex-1">
                  <h1 className="font-bold text-2xl text-foreground mb-1">
                    {user.name}
                  </h1>
                  <p className="text-base text-foreground/80 mb-2">{user.status}</p>
                  {/* –†–µ–≥–∏–æ–Ω –ø–æ–¥ —Å—Ç–∞—Ç—É—Å–æ–º */}
                  <div className="flex items-center gap-1 text-sm text-white/70">
                    <MapPin size={14} className="text-blue-400" />
                    <span>{user.location}</span>
                  </div>
                </div>
              </motion.div>

              {/* –ú–µ—Ç—Ä–∏–∫–∏ */}
              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.2 }}
                className="flex items-center justify-center gap-6 mb-8"
              >
                <CompactMetricCard 
                  value={user.metrics.bliks} 
                  label="–ë–ª–∏–∫–∏" 
                  index={0}
                  onClick={scrollToBliks}
                />
                <CompactMetricCard 
                  value={user.metrics.friends} 
                  label="–î—Ä—É–∑—å—è" 
                  index={1}
                  onClick={onViewFriends || (() => {})}
                />
                <CompactMetricCard 
                  value={user.metrics.superpowers} 
                  label="–°—É–ø–µ—Ä—Å–∏–ª—ã" 
                  index={2}
                  onClick={onViewMap}
                />
              </motion.div>
            </>
          )}

          {/* –¢–æ–ø —Å—É–ø–µ—Ä—Å–∏–ª—ã - –¢–û–õ–¨–ö–û –î–õ–Ø –õ–ò–ß–ù–´–• –ü–†–û–§–ò–õ–ï–ô */}
          {user.profileType !== 'business' && (
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
              className="mb-8"
            >
              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∫–∏ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ */}
              <div className="max-w-sm mx-auto sm:max-w-md md:max-w-lg lg:max-w-2xl xl:max-w-4xl">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Ä–∞—Å–∫—Ä—ã—Ç–∏—è - –≤—ã—Ä–æ–≤–Ω–µ–Ω –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é —Å–µ—Ç–∫–∏ */}
              <div className="flex items-center justify-between mb-6">
                <h2 className="font-bold text-lg text-foreground">
                  üî• –¢–æ–ø —Å—É–ø–µ—Ä—Å–∏–ª—ã
                </h2>
                
                {/* –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ —Å—É–ø–µ—Ä—Å–∏–ª, —á–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ) */}
                {user.topSuperpowers.length > initialCount && (
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={() => setIsTopSuperpowersExpanded(!isTopSuperpowersExpanded)}
                    className="
                      flex items-center gap-1
                      text-sm transition-all duration-300
                      backdrop-blur-xl glass-card
                      rounded-full px-3 py-1.5
                      text-muted-foreground hover:text-foreground
                      hover:bg-accent
                    "
                  >
                    <span>
                      {isTopSuperpowersExpanded ? '–°–≤–µ—Ä–Ω—É—Ç—å' : `–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ${user.topSuperpowers.length}`}
                    </span>
                    {isTopSuperpowersExpanded ? (
                      <ChevronUp size={14} />
                    ) : (
                      <ChevronDown size={14} />
                    )}
                  </motion.button>
                )}
              </div>
              
              {/* –°–µ—Ç–∫–∞ —Å—É–ø–µ—Ä—Å–∏–ª —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º */}
              <motion.div 
                layout
                className="grid gap-3 justify-items-center
                  grid-cols-3 
                  md:grid-cols-3
                  lg:grid-cols-4
                  xl:grid-cols-5
                "
              >
                {displayedSuperpowers.map((superpower, index) => (
                  <motion.div
                    key={superpower.name}
                    layout
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    exit={{ opacity: 0, scale: 0.8 }}
                    transition={{ 
                      duration: 0.3, 
                      delay: index * 0.05,
                      layout: { duration: 0.3 }
                    }}
                  >
                    <CompactSuperpowerCard
                      name={superpower.name}
                      emoji={superpower.emoji}
                      value={superpower.value}
                      energy={superpower.energy}
                      trend={superpower.energy > 80 ? 'up' : superpower.energy < 40 ? 'down' : 'stable'}
                      index={index}
                      isOwn={true}
                      onClick={() => onSuperpowerClick?.(superpower.name)}
                    />
                  </motion.div>
                ))}
              </motion.div>
            </div>
            </motion.div>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —É–±—Ä–∞–Ω—ã - –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É —Å–∞–π—Ç—É —á–µ—Ä–µ–∑ –ë–ª–æ–≥, –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º –Ω–µ –Ω—É–∂–Ω–æ */}

          {/* –ì–∞–ª–µ—Ä–µ—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —Ç–∞–±–º–µ–Ω—é */}
          <motion.div 
            ref={bliksRef}
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.8 }}
            className="mb-8"
          >
            {user.profileType === 'business' ? (
              // üè¢ –ë–ò–ó–ù–ï–°-–ü–†–û–§–ò–õ–¨: –°–µ–≥–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª (iOS/Material style)
              <div className="w-full mb-6 flex justify-center px-6">
                <div className="inline-flex items-center backdrop-blur-xl bg-white/10 rounded-2xl p-1 border border-white/20 shadow-lg">
                  <motion.button
                    whileTap={{ scale: 0.95 }}
                    onClick={() => setBusinessTab('bliks')}
                    className={`
                      relative flex items-center gap-2 px-4 py-2 rounded-xl
                      transition-all duration-300 font-medium text-sm
                      ${businessTab === 'bliks'
                        ? 'text-white'
                        : 'text-white/60 hover:text-white/80'
                      }
                    `}
                  >
                    {businessTab === 'bliks' && (
                      <motion.div
                        layoutId="businessTabIndicator"
                        className="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-purple-600 rounded-xl shadow-md"
                        transition={{ type: "spring", bounce: 0.2, duration: 0.5 }}
                      />
                    )}
                    <span className="relative z-10">‚ö°</span>
                    <span className="relative z-10">–ë–ª–∏–∫–∏</span>
                  </motion.button>
                  
                  <motion.button
                    whileTap={{ scale: 0.95 }}
                    onClick={() => {
                      setBusinessTab('blog');
                      onViewBlog?.();
                    }}
                    className={`
                      relative flex items-center gap-2 px-4 py-2 rounded-xl
                      transition-all duration-300 font-medium text-sm
                      ${businessTab === 'blog'
                        ? 'text-white'
                        : 'text-white/60 hover:text-white/80'
                      }
                    `}
                  >
                    {businessTab === 'blog' && (
                      <motion.div
                        layoutId="businessTabIndicator"
                        className="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-purple-600 rounded-xl shadow-md"
                        transition={{ type: "spring", bounce: 0.2, duration: 0.5 }}
                      />
                    )}
                    <span className="relative z-10">‚úçÔ∏è</span>
                    <span className="relative z-10">–ë–ª–æ–≥</span>
                  </motion.button>
                  
                  <motion.button
                    whileTap={{ scale: 0.95 }}
                    onClick={() => setBusinessTab('events')}
                    className={`
                      relative flex items-center gap-2 px-4 py-2 rounded-xl
                      transition-all duration-300 font-medium text-sm
                      ${businessTab === 'events'
                        ? 'text-white'
                        : 'text-white/60 hover:text-white/80'
                      }
                    `}
                  >
                    {businessTab === 'events' && (
                      <motion.div
                        layoutId="businessTabIndicator"
                        className="absolute inset-0 bg-gradient-to-r from-purple-500 via-pink-500 to-purple-600 rounded-xl shadow-md"
                        transition={{ type: "spring", bounce: 0.2, duration: 0.5 }}
                      />
                    )}
                    <span className="relative z-10">üéâ</span>
                    <span className="relative z-10">–°–æ–±—ã—Ç–∏—è</span>
                  </motion.button>
                </div>
              </div>
            ) : (
              // üë§ –õ–ò–ß–ù–´–ô –ü–†–û–§–ò–õ–¨: –û–±—ã—á–Ω–æ–µ –º–µ–Ω—é —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
              <>
                {/* –ì–ª–∞–≤–Ω–æ–µ —Ç–∞–±–º–µ–Ω—é —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
                <div className="w-full max-w-md mx-auto mb-4">
                  <div className="flex items-center glass-card rounded-2xl p-1">
                    <motion.button
                      whileTap={{ scale: 0.98 }}
                      className="flex-1 py-2.5 px-4 rounded-xl transition-all duration-300 bg-white/20 text-white shadow-sm"
                    >
                      ‚ö° –ë–ª–∏–∫–∏
                    </motion.button>
                    
                    <motion.button
                      whileTap={{ scale: 0.98 }}
                      onClick={onViewBlog}
                      className="flex-1 py-2.5 px-4 rounded-xl transition-all duration-300 text-white/60 hover:text-white/80"
                    >
                      üìù –ë–ª–æ–≥
                    </motion.button>
                  </div>
                </div>
                
                {/* –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã "–ú–æ–∏" / "–î—Ä—É–∑–µ–π" */}
                <div className="flex items-center justify-center gap-4 mb-6">
                  <button
                    onClick={() => setBliksTab('my')}
                    className={`
                      text-sm transition-all duration-300
                      ${bliksTab === 'my'
                        ? 'text-white font-medium'
                        : 'text-white/50 hover:text-white/80'
                      }
                    `}
                  >
                    –ú–æ–∏
                  </button>
                  <span className="text-white/30">‚Ä¢</span>
                  <button
                    onClick={() => setBliksTab('friends')}
                    className={`
                      text-sm transition-all duration-300
                      ${bliksTab === 'friends'
                        ? 'text-white font-medium'
                        : 'text-white/50 hover:text-white/80'
                      }
                    `}
                  >
                    –î—Ä—É–∑–µ–π
                  </button>
                </div>
              </>
            )}

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
            {user.profileType === 'business' && businessTab === 'bliks' && (
              // üè¢ –ë–ò–ó–ù–ï–°: –ë–ª–∏–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
              <div className="profile-bliks-mobile">
                {(showAllBliks ? displayedBliks : displayedBliks.slice(0, previewBliksCount)).map((blik, index) => (
                  <motion.div
                    key={blik.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="instagram-feed-card"
                  >
                    <BlikCard
                      blik={blik}
                      onLike={onLike}
                      onComment={onComment}
                      onShare={onShareBlik}
                      onUserProfile={onUserProfile}
                      onBlikDetail={onBlikDetail}
                      showFullContent={true}
                    />
                  </motion.div>
                ))}
                
                {displayedBliks.length === 0 && (
                  <div className="text-center py-12">
                    <p className="text-white/60">–ü–æ–∫–∞ –Ω–µ—Ç –±–ª–∏–∫–æ–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
                  </div>
                )}
              </div>
            )}

            {user.profileType === 'business' && businessTab === 'blog' && (
              // üè¢ –ë–ò–ó–ù–ï–°: –ë–ª–æ–≥ (–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ PersonalSiteScreen)
              <div className="text-center py-12">
                <p className="text-white/60 mb-4">–ë–ª–æ–≥ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ</p>
              </div>
            )}

            {user.profileType === 'business' && businessTab === 'events' && (
              // üè¢ –ë–ò–ó–ù–ï–°: –°–æ–±—ã—Ç–∏—è (–∑–∞–≥–ª—É—à–∫–∞)
              <div className="text-center py-12">
                <p className="text-white/60">–°–æ–±—ã—Ç–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è</p>
              </div>
            )}

            {user.profileType !== 'business' && (
              // üë§ –õ–ò–ß–ù–´–ô –ü–†–û–§–ò–õ–¨: –ë–ª–∏–∫–∏
              <div className="profile-bliks-mobile">
                {(showAllBliks ? displayedBliks : displayedBliks.slice(0, previewBliksCount)).map((blik, index) => (
                  <motion.div
                    key={blik.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className="instagram-feed-card"
                  >
                    <BlikCard
                      blik={blik}
                      onLike={onLike}
                      onComment={onComment}
                      onShare={onShareBlik}
                      onUserProfile={onUserProfile}
                      onBlikDetail={onBlikDetail}
                      showFullContent={true}
                    />
                  </motion.div>
                ))}

                {displayedBliks.length === 0 && (
                  <div className="text-center py-12">
                    <p className="text-white/60">–ü–æ–∫–∞ –Ω–µ—Ç –±–ª–∏–∫–æ–≤</p>
                  </div>
                )}
              </div>
            )}
          </motion.div>
        </div>
      </div>

      {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
      <div 
        className="fixed inset-0 z-0"
        style={{
          backgroundImage: `linear-gradient(135deg, rgba(0,0,0,0.85) 0%, rgba(0,0,0,0.75) 30%, rgba(0,0,0,0.60) 60%, rgba(0,0,0,0.85) 100%), url(${user.backgroundImage})`,
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          backgroundRepeat: 'no-repeat'
        }}
      />
    </div>
  );
}
