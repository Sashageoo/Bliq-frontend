import React, { useState } from 'react';
import { motion, AnimatePresence } from 'motion/react';
import { ArrowLeft, ArrowRight, Sparkles } from 'lucide-react';

interface OnboardingSuperpowersScreenProps {
  onNext: () => void;
  onBack: () => void;
  onSkip: () => void;
}

export function OnboardingSuperpowersScreen({ onNext, onBack, onSkip }: OnboardingSuperpowersScreenProps) {
  const [currentCategory, setCurrentCategory] = useState(0);

  const superpowerCategories = [
    {
      emoji: 'üåä',
      name: 'Flow',
      title: '–ü–æ—Ç–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
      description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å –ø–∏–∫–æ–≤–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
      color: 'from-blue-500 to-cyan-500',
      examples: ['–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º', '–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å', '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ']
    },
    {
      emoji: 'üíú',
      name: 'Soul',
      title: '–°–∏–ª–∞ –¥—É—à–∏',
      description: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞, —Ö–∞—Ä–∏–∑–º–∞ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–ª–∏—è—Ç—å –Ω–∞ –¥—Ä—É–≥–∏—Ö —á–µ—Ä–µ–∑ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å',
      color: 'from-purple-500 to-pink-500',
      examples: ['–•–∞—Ä–∏–∑–º–∞', '–≠–º–ø–∞—Ç–∏—è', '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ', '–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ']
    },
    {
      emoji: 'üß†',
      name: 'Mind',
      title: '–°–∏–ª–∞ —Ä–∞–∑—É–º–∞',
      description: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–¥–µ–∏',
      color: 'from-indigo-500 to-purple-500',
      examples: ['–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', '–ü–∞–º—è—Ç—å', '–û–±—É—á–∞–µ–º–æ—Å—Ç—å']
    },
    {
      emoji: 'üë•',
      name: 'Crew',
      title: '–°–∏–ª–∞ –∫–æ–º–∞–Ω–¥—ã',
      description: '–ù–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –ª—é–¥—å–º–∏, –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤',
      color: 'from-green-500 to-teal-500',
      examples: ['–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥', '–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ', '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', '–î–∏–ø–ª–æ–º–∞—Ç–∏—è']
    },
    {
      emoji: 'üí™',
      name: 'Body',
      title: '–°–∏–ª–∞ —Ç–µ–ª–∞',
      description: '–§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∑–¥–æ—Ä–æ–≤—å–µ –∏ —ç–Ω–µ—Ä–≥–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—É–ø–µ—Ä—Å–∏–ª—ã',
      color: 'from-orange-500 to-red-500',
      examples: ['–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è', '–ó–¥–æ—Ä–æ–≤—å–µ', '–≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å']
    },
    {
      emoji: 'üé®',
      name: 'Style',
      title: '–°–∏–ª–∞ —Å—Ç–∏–ª—è',
      description: '–≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —á—É—Ç—å–µ, —É–º–µ–Ω–∏–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–æ—Ç—É –∏ –≤—ã—Ä–∞–∂–∞—Ç—å —Å–µ–±—è —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ —Ñ–æ—Ä–º—ã',
      color: 'from-pink-500 to-rose-500',
      examples: ['–î–∏–∑–∞–π–Ω', '–ú–æ–¥–∞', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è']
    },
    {
      emoji: '‚ö°',
      name: 'Drive',
      title: '–î–≤–∏–∂—É—â–∞—è —Å–∏–ª–∞',
      description: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è, –∞–º–±–∏—Ü–∏–∏ –∏ –Ω–µ–∏—Å—Å—è–∫–∞–µ–º–æ–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ü–µ–ª–µ–π',
      color: 'from-yellow-500 to-orange-500',
      examples: ['–ú–æ—Ç–∏–≤–∞—Ü–∏—è', '–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å', '–ù–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', '–ê–º–±–∏—Ü–∏–∏']
    }
  ];

  const nextCategory = () => {
    if (currentCategory < superpowerCategories.length - 1) {
      setCurrentCategory(prev => prev + 1);
    } else {
      onNext();
    }
  };

  const prevCategory = () => {
    if (currentCategory > 0) {
      setCurrentCategory(prev => prev - 1);
    } else {
      onBack();
    }
  };

  return (
    <div className="min-h-screen bg-background relative overflow-hidden">
      {/* –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω */}
      <div className="absolute inset-0">
        <div className="absolute inset-0 bliq-energy-gradient opacity-15" />
        <motion.div
          animate={{
            backgroundPosition: ['0% 0%', '100% 100%'],
          }}
          transition={{
            duration: 20,
            repeat: Infinity,
            repeatType: 'reverse',
          }}
          className="absolute inset-0 opacity-25"
          style={{
            backgroundImage: `
              radial-gradient(circle at 20% 80%, rgba(192, 132, 252, 0.4) 0%, transparent 50%),
              radial-gradient(circle at 80% 20%, rgba(59, 130, 246, 0.4) 0%, transparent 50%),
              radial-gradient(circle at 40% 40%, rgba(236, 72, 153, 0.3) 0%, transparent 50%)
            `,
          }}
        />
      </div>

      <div className="relative z-10 min-h-screen flex flex-col">
        {/* –•–µ–¥–µ—Ä */}
        <div className="flex items-center justify-between p-6">
          <motion.button
            whileHover={{ scale: 1.1 }}
            whileTap={{ scale: 0.9 }}
            onClick={prevCategory}
            className="w-10 h-10 rounded-full glass-card flex items-center justify-center text-white"
          >
            <ArrowLeft size={20} />
          </motion.button>

          <div className="text-center">
            <h1 className="text-xl font-semibold text-white">–°—É–ø–µ—Ä—Å–∏–ª—ã</h1>
            <p className="text-sm text-purple-200">
              {currentCategory + 1} –∏–∑ {superpowerCategories.length}
            </p>
          </div>

          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={onSkip}
            className="text-muted-foreground hover:text-white transition-colors"
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </motion.button>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="flex-1 flex flex-col items-center justify-center px-6">
          <AnimatePresence mode="wait">
            <motion.div
              key={currentCategory}
              initial={{ opacity: 0, x: 100 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -100 }}
              transition={{ duration: 0.5 }}
              className="text-center max-w-md"
            >
              {/* –ò–∫–æ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
              <motion.div
                initial={{ scale: 0, rotate: -180 }}
                animate={{ scale: 1, rotate: 0 }}
                transition={{ duration: 0.8, type: "spring", bounce: 0.4 }}
                className={`w-32 h-32 rounded-full bg-gradient-to-br ${superpowerCategories[currentCategory].color} flex items-center justify-center mb-6 mx-auto shadow-2xl`}
              >
                <span className="text-6xl">{superpowerCategories[currentCategory].emoji}</span>
              </motion.div>

              {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
              <motion.h2
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
                className="text-3xl font-bold text-white mb-2"
              >
                {superpowerCategories[currentCategory].title}
              </motion.h2>

              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3 }}
                className="text-lg text-muted-foreground mb-8 leading-relaxed"
              >
                {superpowerCategories[currentCategory].description}
              </motion.p>

              {/* –ü—Ä–∏–º–µ—Ä—ã —Å—É–ø–µ—Ä—Å–∏–ª */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4 }}
                className="grid grid-cols-2 gap-3 mb-8"
              >
                {superpowerCategories[currentCategory].examples.map((example, index) => (
                  <motion.div
                    key={example}
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: 0.5 + index * 0.1 }}
                    className="px-4 py-3 glass-card rounded-xl text-white text-sm font-medium neon-border"
                  >
                    {example}
                  </motion.div>
                ))}
              </motion.div>
            </motion.div>
          </AnimatePresence>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="p-6">
          <motion.button
            whileHover={{ scale: 1.02, y: -2 }}
            whileTap={{ scale: 0.98 }}
            onClick={nextCategory}
            className="w-full px-8 py-4 bliq-energy-gradient text-white font-semibold rounded-2xl shadow-xl flex items-center justify-center gap-3 transition-all duration-300 energy-glow"
          >
            {currentCategory < superpowerCategories.length - 1 ? '–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è' : '–ü–æ–Ω—è—Ç–Ω–æ!'}
            <ArrowRight size={20} />
          </motion.button>
        </div>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
        <div className="pb-8">
          <div className="flex justify-center gap-2">
            <div className="w-3 h-3 rounded-full bg-white/30"></div>
            <div className="w-3 h-3 rounded-full bg-white"></div>
            <div className="w-3 h-3 rounded-full bg-white/30"></div>
            <div className="w-3 h-3 rounded-full bg-white/30"></div>
            <div className="w-3 h-3 rounded-full bg-white/30"></div>
          </div>
        </div>
      </div>
    </div>
  );
}